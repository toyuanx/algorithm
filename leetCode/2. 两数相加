/**
 * Definition for a singly-linked list.
 * class ListNode {
 *     public $val = 0;
 *     public $next = null;
 *     function __construct($val) { $this->val = $val; }
 * }
 */
class Solution {

    /**
     * @param ListNode $l1
     * @param ListNode $l2
     * @return ListNode
     */
    function addTwoNumbers($l1, $l2) {
        $val = 0;
        $carry = 0; // 进位
        $l3 = new ListNode($val);
        $tmp = $l3;

        while($l1 || $l2) {
            $val = ($l1 ? $l1->val : 0) + ($l2 ? $l2->val : 0) + $carry;
            // 进位处理
            if($val < 10) {
                $val = $val;
                $carry = 0;
            } else {
                $val = $val % 10;
                $carry = 1;
            }
    
            $tmp->next = new ListNode($val);
            $tmp = $tmp->next;
        
            $l1 = $l1->next;
            $l2 = $l2->next;
        }

        if($carry == 1) {
            $tmp->next = new ListNode($carry);
        }

        return $l3->next;
        
    }
}
