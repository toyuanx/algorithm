/**
 * Definition for a binary tree node.
 * class TreeNode {
 *     public $val = null;
 *     public $left = null;
 *     public $right = null;
 *     function __construct($value) { $this->val = $value; }
 * }
 */
class Solution {

    /**
     * @param Integer[] $nums
     * @return TreeNode
     */
    function sortedArrayToBST($nums) {
        return $this->createNode($nums, 0, count($nums) - 1);
    }

    public function createNode($nums, $start, $end) {
        if($start > $end) {
            return null;
        }
       // 已排序数组，取中间节点作为根节点
        $mid = round(($start + $end) /2);

        $rootNode = new TreeNode($nums[$mid]);
      
        $rootNode->left = $this->createNode($nums, $start, $mid-1);
        $rootNode->right = $this->createNode($nums, $mid + 1, $end);

        return $rootNode;
    }

}
